---
title: "Bulk_RNA_TCGA"
format: html
editor: visual
---

#-------- #-- This script contains Differential gene expression from tumor and normal RNA counts --- #------

1.  Prepare the matrix
2.  Define tumor and normal
3.  Filter low-expressed genes
4.  Normalization
5.  log2CPM transform
6.  DGE using limma
7.  Plots

```{r}
library(DESeq2)
library(edgeR)
library(limma)
library(ggplot2)
library(clusterProfiler)
library(org.Hs.eg.db) 

#----- 1. Prepare the data from TCGA (after GDC prepare)
rna_data <- readRDS("../../data/rna_data.rds")
counts <- assay(rna_data)  # Raw counts
col_data <- colData(rna_data)

#----- 2. Create sample groups (Tumor vs Normal)
col_data$condition <- ifelse(col_data$sample_type == "Primary Tumor", "Tumor", "Normal")
condition <- factor(col_data$condition, levels = c("Normal", "Tumor"))

#----- 3. Create DGE List object
genelist <- DGEList(counts = counts, group = condition)

#----- 4. Filter low-expressed genes (keep genes with CPM > 1 in at least 2 samples)
keep <- rowSums(cpm(genelist) > 1) >= 2
genelist.filtered <- genelist[keep, , keep.lib.sizes = FALSE]

#----- 5. Normalization (TMM)
genelist.norm <- calcNormFactors(genelist.filtered)

#------ 6. Create design matrix
design <- model.matrix(~condition)
colnames(design) <- levels(condition)
rownames(design) <- colnames(genelist.norm)

#------ 7. Transform to logCPM
logCPM <- cpm(genelist.norm, log = TRUE, prior.count = 3)

#----- 8. Linear modeling
fit <- lmFit(logCPM, design)
fit <- eBayes(fit, trend = TRUE)

#----- 9. Extract results
DGE_result <- topTable(fit, coef = "Tumor", n = Inf, sort.by = "p")

#----- 10. Classify DEGs
DGE_result$type <- ifelse(DGE_result$adj.P.Val < 0.05 & abs(DGE_result$logFC) >= 1,
                         ifelse(DGE_result$logFC > 1, 'Up', 'Down'), 'Stable')

#------ 11. Summary
table(DGE_result$type)
write.csv(DGE_result, "DGE_result.csv", row.names = TRUE)

#------- 12. Volcano plot
ggplot(DGE_result, aes(x = logFC, y = -log10(adj.P.Val), color = type)) +
  geom_point(alpha = 0.6, size = 1) +
  scale_color_manual(values = c("#546de5", "#000000", "#ff4757")) +
  geom_hline(yintercept = -log10(0.05), linetype = "dashed") +
  geom_vline(xintercept = c(-1, 1), linetype = "dashed") +
  labs(x = "log2 fold change (Tumor/Normal)", y = "-log10 FDR") +
  ggtitle("TCGA-BRCA Differential Expression") +
  theme_bw()

#------ 13. GO enrichment (convert to ENTREZID first)
DGE_up <- rownames(DGE_result[DGE_result$type == "Up", ])
DGE_down <- rownames(DGE_result[DGE_result$type == "Down", ])

DGE_up_clean <- gsub("\\.\\d+$", "", DGE_up)
DGE_down_clean <- gsub("\\.\\d+$", "", DGE_down)

head(DGE_up_clean)
keys(org.Hs.eg.db, keytype = "ENSEMBL")[1:5]

# Convert to ENTREZ
up_entrez <- bitr(DGE_up_clean, fromType = "ENSEMBL", 
                  toType = "ENTREZID", OrgDb = org.Hs.eg.db)
down_entrez <- bitr(DGE_down_clean, fromType = "ENSEMBL", 
                    toType = "ENTREZID", OrgDb = org.Hs.eg.db)
Go_BP_up <- enrichGO(gene = up_entrez$ENTREZID, OrgDb = org.Hs.eg.db,
                     ont = "BP", pAdjustMethod = "BH",
                     pvalueCutoff = 0.05, qvalueCutoff = 0.05)

Go_BP_down <- enrichGO(gene = down_entrez$ENTREZID, OrgDb = org.Hs.eg.db,
                       ont = "BP", pAdjustMethod = "BH",
                       pvalueCutoff = 0.05, qvalueCutoff = 0.05)

dotplot(Go_BP_up, title = "Upregulated Genes - Biological Processes")
dotplot(Go_BP_down, title = "Downregulated Genes - Biological Processes")
```
